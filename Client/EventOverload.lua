-- Assigns and Binds a Blueprint Event Dispatcher
---@param sEventName string
---@param fnCallback function
---@overload fun(self: Button, sEventName: "OnClicked", fnCallback: fun(self: Button))
---@overload fun(self: Button, sEventName: "OnPressed", fnCallback: fun(self: Button))
---@overload fun(self: Button, sEventName: "OnReleased", fnCallback: fun(self: Button))
---@overload fun(self: Button, sEventName: "OnHovered", fnCallback: fun(self: Button))
---@overload fun(self: Button, sEventName: "OnUnhovered", fnCallback: fun(self: Button))
---@overload fun(self: Button, sEventName: "MouseButtonDown", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "MouseButtonUp", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "MouseMove", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "MouseEnter", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "MouseLeave", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "MouseWheel", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "MouseDoubleClick", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "FocusReceived", fnCallback: fun(self: Button))
---@overload fun(self: Button, sEventName: "FocusLost", fnCallback: fun(self: Button))
---@overload fun(self: Button, sEventName: "DragDetected", fnCallback: fun(self: Button, PointerEvent: PointerEvent))
---@overload fun(self: Button, sEventName: "Drop", fnCallback: fun(self: Button, PayloadID: integer, Tag: string))
---@overload fun(self: Button, sEventName: "DragCancelled", fnCallback: fun(self: Button, PayloadID: integer, Tag: string))
---@return function | nil
function Button:BindDispatcher(sEventName, fnCallback) end

-- Assigns and Binds a Blueprint Event Dispatcher
---@param sEventName string
---@param fnCallback function
---@overload fun(self: CheckBox, sEventName: "OnCheckStateChanged", fnCallback: fun(self: CheckBox, IsChecked: boolean))
---@overload fun(self: CheckBox, sEventName: "MouseButtonDown", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "MouseButtonUp", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "MouseMove", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "MouseEnter", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "MouseLeave", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "MouseWheel", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "MouseDoubleClick", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "FocusReceived", fnCallback: fun(self: CheckBox))
---@overload fun(self: CheckBox, sEventName: "FocusLost", fnCallback: fun(self: CheckBox))
---@overload fun(self: CheckBox, sEventName: "DragDetected", fnCallback: fun(self: CheckBox, PointerEvent: PointerEvent))
---@overload fun(self: CheckBox, sEventName: "Drop", fnCallback: fun(self: CheckBox, PayloadID: integer, Tag: string))
---@overload fun(self: CheckBox, sEventName: "DragCancelled", fnCallback: fun(self: CheckBox, PayloadID: integer, Tag: string))
---@return function | nil
function CheckBox:BindDispatcher(sEventName, fnCallback) end

-- Assigns and Binds a Blueprint Event Dispatcher
---@param sEventName string
---@param fnCallback function
---@overload fun(self: Slider, sEventName: "OnMouseCaptureBegin", fnCallback: fun(self: Slider))
---@overload fun(self: Slider, sEventName: "OnMouseCaptureEnd", fnCallback: fun(self: Slider))
---@overload fun(self: Slider, sEventName: "OnValueChanged", fnCallback: fun(self: Slider, Value: number))
---@overload fun(self: Slider, sEventName: "MouseButtonDown", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "MouseButtonUp", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "MouseMove", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "MouseEnter", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "MouseLeave", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "MouseWheel", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "MouseDoubleClick", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "FocusReceived", fnCallback: fun(self: Slider))
---@overload fun(self: Slider, sEventName: "FocusLost", fnCallback: fun(self: Slider))
---@overload fun(self: Slider, sEventName: "DragDetected", fnCallback: fun(self: Slider, PointerEvent: PointerEvent))
---@overload fun(self: Slider, sEventName: "Drop", fnCallback: fun(self: Slider, PayloadID: integer, Tag: string))
---@overload fun(self: Slider, sEventName: "DragCancelled", fnCallback: fun(self: Slider, PayloadID: integer, Tag: string))
---@return function | nil
function Slider:BindDispatcher(sEventName, fnCallback) end

-- Assigns and Binds a Blueprint Event Dispatcher
---@param sEventName string
---@param fnCallback function
---@overload fun(self: ComboBox, sEventName: "OnMenuRefresh", fnCallback: fun(self: ComboBox))
---@overload fun(self: ComboBox, sEventName: "OnSelectionChanged", fnCallback: fun(self: ComboBox, SelectedOption: string))
---@overload fun(self: ComboBox, sEventName: "MouseButtonDown", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "MouseButtonUp", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "MouseMove", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "MouseEnter", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "MouseLeave", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "MouseWheel", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "MouseDoubleClick", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "FocusReceived", fnCallback: fun(self: ComboBox))
---@overload fun(self: ComboBox, sEventName: "FocusLost", fnCallback: fun(self: ComboBox))
---@overload fun(self: ComboBox, sEventName: "DragDetected", fnCallback: fun(self: ComboBox, PointerEvent: PointerEvent))
---@overload fun(self: ComboBox, sEventName: "Drop", fnCallback: fun(self: ComboBox, PayloadID: integer, Tag: string))
---@overload fun(self: ComboBox, sEventName: "DragCancelled", fnCallback: fun(self: ComboBox, PayloadID: integer, Tag: string))
---@return function | nil
function ComboBox:BindDispatcher(sEventName, fnCallback) end

-- Assigns and Binds a Blueprint Event Dispatcher
---@param sEventName string
---@param fnCallback function
---@overload fun(self: EditableText, sEventName: "OnTextChanged", fnCallback: fun(self: EditableText, Text: string))
---@overload fun(self: EditableText, sEventName: "OnTextCommitted", fnCallback: fun(self: EditableText, Text: string, CommitMethod: TextCommit))
---@overload fun(self: EditableText, sEventName: "MouseButtonDown", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "MouseButtonUp", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "MouseMove", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "MouseEnter", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "MouseLeave", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "MouseWheel", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "MouseDoubleClick", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "FocusReceived", fnCallback: fun(self: EditableText))
---@overload fun(self: EditableText, sEventName: "FocusLost", fnCallback: fun(self: EditableText))
---@overload fun(self: EditableText, sEventName: "DragDetected", fnCallback: fun(self: EditableText, PointerEvent: PointerEvent))
---@overload fun(self: EditableText, sEventName: "Drop", fnCallback: fun(self: EditableText, PayloadID: integer, Tag: string))
---@overload fun(self: EditableText, sEventName: "DragCancelled", fnCallback: fun(self: EditableText, PayloadID: integer, Tag: string))
---@return function | nil
function EditableText:BindDispatcher(sEventName, fnCallback) end

-- Assigns and Binds a Blueprint Event Dispatcher
---@param sEventName string
---@param fnCallback function
---@overload fun(self: SpinBox, sEventName: "OnValueChanged", fnCallback: fun(self: SpinBox, Value: number))
---@overload fun(self: SpinBox, sEventName: "OnValueCommitted", fnCallback: fun(self: SpinBox, Value: number, CommitMethod: TextCommit))
---@overload fun(self: SpinBox, sEventName: "OnBeginSliderMovement", fnCallback: fun(self: SpinBox))
---@overload fun(self: SpinBox, sEventName: "OnEndSliderMovement", fnCallback: fun(self: SpinBox, Value: number))
---@overload fun(self: SpinBox, sEventName: "MouseButtonDown", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "MouseButtonUp", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "MouseMove", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "MouseEnter", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "MouseLeave", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "MouseWheel", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "MouseDoubleClick", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "FocusReceived", fnCallback: fun(self: SpinBox))
---@overload fun(self: SpinBox, sEventName: "FocusLost", fnCallback: fun(self: SpinBox))
---@overload fun(self: SpinBox, sEventName: "DragDetected", fnCallback: fun(self: SpinBox, PointerEvent: PointerEvent))
---@overload fun(self: SpinBox, sEventName: "Drop", fnCallback: fun(self: SpinBox, PayloadID: integer, Tag: string))
---@overload fun(self: SpinBox, sEventName: "DragCancelled", fnCallback: fun(self: SpinBox, PayloadID: integer, Tag: string))
---@return function | nil
function SpinBox:BindDispatcher(sEventName, fnCallback) end